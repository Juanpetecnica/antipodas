function loadCss(b) {
    var a = document.createElement("link");
    a.href = b;
    a.rel = "stylesheet";
    a.type = "text/css";
    document.getElementsByTagName("head")[0].appendChild(a)
}

function error_alert(a) {
    $("#errorDiv").html(a).show();
    setTimeout(function() {
        $("#errorDiv").html("").hide()
    }, 8000);
    $("#loading:visible").hide()
}

function goToTop() {
    $("html, body").animate({
        scrollTop: 0
    }, "fast")
}
$("#form_dms input.coords-dms").on("change", function() {
    convertDMS()
});
$("#form_dd input.coords-dd").on("change", function() {
    convertDD()
});

function convertError(d, b, a) {
    var e = $("#" + d);
    var c = $("#" + b).html("");
    if (a == "0") {
        e.addClass("has-error has-feedback");
        c.html("Make sure your coordinates are valid.")
    }
    if (a == "1") {
        e.removeClass("has-error has-feedback")
    }
    if (a == "2") {
        e.removeClass("has-error has-feedback has-success")
    }
}

function roundD(a) {
    if (!isNaN(a)) {
        return Math.round(a * 10) / 10
    }
    return a
}

function getDMSFormatted(g, d, a, j, e, f, i, b) {
    var h = g + String.fromCharCode(176) + " " + d + "' " + roundD(a) + '" ' + j;
    var c = e + String.fromCharCode(176) + " " + f + "' " + roundD(i) + '" ' + b;
    return {
        lat: h,
        lng: c
    }
}

function parseDMS(g, d, a, j, e, f, i, b) {
    var h = convertDMStoDD(g, d, a, j, e, f, i, b);
    writeDMS(h.latDegrees, h.latMinutes, h.latSeconds, j, h.lngDegrees, h.lngMinutes, h.lngSeconds, b);
    writeDD(h.lat, h.lng)
}

function convertDMS() {
    convertError("validateDMS", "helpBlockDMS", "2");
    convertError("validateDD", "helpBlockDD", "2");
    var g = parseFloat($("#latDegrees").val());
    var a = parseFloat($("#latMinutes").val());
    var f = parseFloat($("#latSeconds").val());
    var c = parseFloat($("#lngDegrees").val());
    var h = parseFloat($("#lngMinutes").val());
    var b = parseFloat($("#lngSeconds").val());
    var e = $("input[name='latOrientation']:checked").val();
    var d = $("input[name='lngOrientation']:checked").val();
    parseDMS(g, a, f, e, c, h, b, d)
}

function splitDMS() {
    var l = $("#latlngDMS").val();
    convertError("validateDMS", "helpBlockDMS", "2");
    convertError("validateDD", "helpBlockDD", "2");
    if (l === "") {
        $("#form_dms").trigger("reset");
        $("#form_dd").trigger("reset");
        return
    }
    l = regexDMS(l);
    if (l === false) {
        convertError("validateDMS", "helpBlockDMS", "0");
        return
    }
    var k = l.split(",");
    var i = k[0].trim();
    var j = k[1].trim();
    var c = ["°", "° ", "''", "'' ", "'", "' ", '"', '" ', " "];
    var o = i.split(new RegExp(c.join("|"))).filter(Boolean);
    var d = j.split(new RegExp(c.join("|"))).filter(Boolean);
    var h = parseFloat(o[0]);
    var e = parseFloat(o[1]);
    var b = parseFloat(roundD(o[2]));
    var n = o[3];
    var f = parseFloat(d[0]);
    var g = parseFloat(d[1]);
    var m = parseFloat(roundD(d[2]));
    var a = d[3];
    parseDMS(h, e, b, n, f, g, m, a);
    convertError("validateDMS", "helpBlockDMS", "1")
}

function parseDD(b, a) {
    var d = convertDDtoDMS(b, a);
    writeDMS(d.latDegrees, d.latMinutes, d.latSeconds, d.latOrientation, d.lngDegrees, d.lngMinutes, d.lngSeconds, d.lngOrientation);
    writeDD(d.lat, d.lng)
}

function convertDD() {
    convertError("validateDMS", "helpBlockDMS", "2");
    convertError("validateDD", "helpBlockDD", "2");
    var b = parseFloat($("#latDecimalDegrees").val());
    var a = parseFloat($("#lngDecimalDegrees").val());
    parseDD(b, a)
}

function splitDD() {
    var e = $("#latlngDD").val();
    convertError("validateDMS", "helpBlockDMS", "2");
    convertError("validateDD", "helpBlockDD", "2");
    if (e == "") {
        $("#form_dms").trigger("reset");
        $("#form_dd").trigger("reset");
        return
    }
    e = regexDD(e);
    if (e === false) {
        convertError("validateDD", "helpBlockDD", "0");
        return
    }
    var b = [",", ", ", " "];
    var c = e.split(new RegExp(b.join("|"))).filter(Boolean);
    var d = parseFloat(c[0].trim());
    var a = parseFloat(c[1].trim());
    parseDD(d, a);
    convertError("validateDD", "helpBlockDD", "1")
}

function writeDMS(f, c, a, i, d, e, h, b) {
    if (i == "S") {
        $("input[name='latOrientation'][value='S']").prop("checked", true)
    } else {
        $("input[name='latOrientation'][value='N']").prop("checked", true)
    }
    if (b == "E") {
        $("input[name='lngOrientation'][value='E']").prop("checked", true)
    } else {
        $("input[name='lngOrientation'][value='W']").prop("checked", true)
    }
    $("#latDegrees").val(f);
    $("#latMinutes").val(c);
    $("#latSeconds").val(roundD(a));
    $("#lngDegrees").val(d);
    $("#lngMinutes").val(e);
    $("#lngSeconds").val(roundD(h));
    var g = getDMSFormatted(f, c, a, i, d, e, h, b);
    $("#latlngDMS").val(g.lat + ", " + g.lng)
}

function writeDD(d, b) {
    $("#latDecimalDegrees").val(d);
    $("#lngDecimalDegrees").val(b);
    $("#latlngDD").val(d + ", " + b);
    var e = antipodesLatLng(d, b);
    var f = convertDDtoDMS(e.lat, e.lng);
    var a = getDMSFormatted(f.latDegrees, f.latMinutes, f.latSeconds, f.latOrientation, f.lngDegrees, f.lngMinutes, f.lngSeconds, f.lngOrientation);
    $("#latlngAntipodeDD").val(e.lat + ", " + e.lng);
    $("#latlngAntipodeDMS").val(a.lat + ", " + a.lng)
}

function regexDMS(a) {
    a = a.replace(",", "");
    a = a.replace(/\s+/g, " ").trim();
    a = a.replace("N", "N,");
    a = a.replace("S", "S,");
    var b = new RegExp("^([0-9]|[1-8][0-9]|90)(°|° | )(0[0-9]|[0-9]|[1-5][0-9]|60)('|' | )(0[0-9]|[0-9]|[1-5][0-9]|60)(.[0-9]+|)(\"|\" |''|'' | |)(N|S)(,|, |)([0-9]|[1-9][0-9]|1[0-7][0-9]|180)(°|° | )(0[0-9]|[0-9]|[1-5][0-9]|60)('|' | )(0[0-9]|[0-9]|[1-5][0-9]|60)(.[0-9]+|)(\"|\" |''|'' | |)(E|W)$");
    if (b.test(a) === true) {
        return a
    }
    return false
}

function regexDD(b) {
    b = b.replace(/\s+/g, " ").trim();
    b = b.replace(" ,", ",");
    var a = new RegExp("^(-|)([0-9]|[1-8][0-9]|90)(.[0-9]+|)(,|, | )(-|)([0-9]|[1-9][0-9]|1[0-7][0-9]|180)(.[0-9]+|)$");
    if (a.test(b) === true) {
        return b
    }
    return false
}

function convertDMStoDD(g, c, a, j, e, f, i, b) {
    if (isNaN(a) || a >= 60 || a < 0) {
        c++;
        a = 0
    }
    if (isNaN(c) || c >= 60 || c < 0) {
        g++;
        c = 0
    }
    if (isNaN(g) || g > 90 || g < 0) {
        g = 0
    }
    if (isNaN(i) || i >= 60 || i < 0) {
        f++;
        i = 0
    }
    if (isNaN(f) || f >= 60 || f < 0) {
        e++;
        f = 0
    }
    if (isNaN(e) || e > 180 || g < 0) {
        e = 0
    }
    var d = g + c / 60 + a / 3600;
    var h = e + f / 60 + i / 3600;
    if (j == "S") {
        d = -d
    }
    if (b == "W") {
        h = -h
    }
    if (isNaN(d) || d > 90 || d < -90) {
        d = 0
    }
    if (isNaN(h) || h > 180 || d < -180) {
        h = 0
    }
    return {
        lat: parseFloat(d).toFixed(6),
        lng: parseFloat(h).toFixed(6),
        latDegrees: g,
        latMinutes: c,
        latSeconds: a,
        latOrientation: j,
        lngDegrees: e,
        lngMinutes: f,
        lngSeconds: i,
        lngOrientation: b
    }
}

function convertDDtoDMS(h, j) {
    if (isNaN(h) || h > 90 || h < -90) {
        h = 0
    }
    if (isNaN(j) || j > 180 || j < -180) {
        j = 0
    }
    var l = "N";
    var b = "E";
    if (h < 0) {
        l = "S"
    }
    if (j < 0) {
        b = "W"
    }
    var f = Math.abs(h);
    var i = Math.abs(j);
    var g = parseInt(f);
    var c = parseInt(60 * (f - g));
    var a = 3600 * (f - g) - 60 * c;
    var d = parseInt(i);
    var e = parseInt(60 * (i - d));
    var k = 3600 * (i - d) - 60 * e;
    return {
        lat: parseFloat(h).toFixed(6),
        lng: parseFloat(j).toFixed(6),
        latDegrees: g,
        latMinutes: c,
        latSeconds: a,
        latOrientation: l,
        lngDegrees: d,
        lngMinutes: e,
        lngSeconds: k,
        lngOrientation: b
    }
}

function getFromDMS(i) {
    var l = i.split(",");
    var j = l[0].trim();
    var k = l[1].trim();
    var c = ["°", "° ", "''", "'' ", "'", "' ", '"', '" ', " "];
    var o = j.split(new RegExp(c.join("|"))).filter(Boolean);
    var d = k.split(new RegExp(c.join("|"))).filter(Boolean);
    var h = parseFloat(o[0]);
    var e = parseFloat(o[1]);
    var b = parseFloat(roundD(o[2]));
    var n = o[3];
    var f = parseFloat(d[0]);
    var g = parseFloat(d[1]);
    var m = parseFloat(roundD(d[2]));
    var a = d[3];
    return convertDMStoDD(h, e, b, n, f, g, m, a)
}

function getFromDD(e) {
    var b = [",", ", ", " "];
    var c = e.split(new RegExp(b.join("|"))).filter(Boolean);
    var d = parseFloat(c[0].trim());
    var a = parseFloat(c[1].trim());
    return convertDDtoDMS(d, a)
}

function antipodesLatLng(e, b, d) {
    if (d === undefined) {
        d = false
    }
    var c = 0;
    var a = 0;
    if (e >= 0) {
        c = -Math.abs(e)
    } else {
        c = Math.abs(e)
    }
    a = 180 - Math.abs(b);
    if (b >= 0) {
        a = -Math.abs(a)
    } else {
        a = Math.abs(a)
    }
    if (d === false) {
        return {
            lat: parseFloat(c).toFixed(6),
            lng: parseFloat(a).toFixed(6)
        }
    } else {
        if (d === true) {
            return [parseFloat(c).toFixed(6), parseFloat(a).toFixed(6)]
        }
    }
}
$(document).ready(function() {
    $("body").keyup(function(a) {
        if (a.keyCode === 13) {
            codeByAddress()
        }
    });
    $(window).scroll(function() {
        var a = $(window).scrollTop();
        if (a > 180) {
            $("#topScroll").show()
        } else {
            $("#topScroll").hide()
        }
    });
    $(window).on("load", function() {
        loadCss("/resources/css/main.min.css");
        loadCss("/resources/css/osm/leaflet.min.css");
        loadCss("/resources/css/osm/Control.Geocoder.min.css");
        $("#loading:visible").hide()
    })
});

function usageLimit() {
    $("#map-canvas").hide();
    $("#map-canvas-2").hide();
    $("#coordinates-row").hide();
    $("#main-alert:hidden").show();
    $("#searchInputDiv").hide()
}
var funny_msg = ["Most likely the ocean. Watch out for sharks.", "OOps... water. Do you know how to swim?", "Oh no! It`s only water around you. Mind your eye!", "You`re alone and the water is so cold.", "Incredible! There is no one around you, just fish.", "Most likely it`s only water. Take care not to get wet.", "It`s only water around, but I think you can handle it.", "Hurray! You`re finally alone... or almost...", "You`re in the water and all you need is a boat.", "Thousands have lived without love. Not one without water. - W. H. Auden", "Never underestimate the power of the ocean. - Heidi Klum", "Keep Calm & Drink Water."];